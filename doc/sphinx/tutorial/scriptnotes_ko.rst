특별 스크립트에 대한 특별한 생각
====================================


특별 스크립트에 대한 특별한 생각
------------------------------------

`Microsoft <http://www.microsoft.com/typography/specs/default.htm>`__는 특정 스크립트에 대해 워드 프로세서가 기본적으로 지원해야 하는 (opentype) 기능에 대한 정보를 제공합니다.

.. warning::

   기능이 문서화되어 있고 유용해 보인다고 해서 Uniscribe가 스크립트에 사용할 것이라는 의미는 아닙니다. 많은 라틴어 스크립트 글꼴은 'init', 'medi', 'calt' 등을 사용하고 싶지만 이러한 기능 중 어느 것도 라틴어에 대해 Uniscribe에서 켜져 있지 않습니다.

.. warning::

   Uniscribe가 기능을 지원한다고 해서 특정 응용 프로그램이 지원한다는 의미는 아닙니다. Uniscribe(2005년 기준)는 라틴어에 대해 'liga'를 지원하지만 Word나 Office는 지원하지 않습니다.

.. warning::

   Uniscribe(MS 유니코드 텍스트 레이아웃 루틴)는 스크립트에 따라 GPOS 또는 GSUB 테이블을 무시할 수 있으며 GPOS/GSUB에 올바른 내용이 없으면 글꼴 사용을 거부할 수도 있습니다. 히브리어 글꼴에는 GPOS와 GSUB가 모두 있어야 합니다. 그렇지 않으면 글꼴이 사용되지 않습니다. 라틴어 글꼴에는 둘 다 필요하지 않지만 GSUB가 없으면 GPOS가 사용되지 않습니다. 따라서 이제 한 테이블이 있고 다른 테이블이 없으면 FontForge는 다른 테이블의 더미 버전을 생성합니다.


공통
^^^^^^

많은 문자가 둘 이상의 스크립트에서 사용됩니다. 숫자, 구두점 등은 유니코드에서 "공통" 스크립트에 속한다고 합니다. OpenType은 이 스크립트를 인식하지 못합니다. 가장 가까운 것은 스크립트 'DFLT'입니다. 제 이해에 따르면 공통 스크립트의 문자는 OpenType에 의해 인접 텍스트의 스크립트가 할당됩니다.

따라서 글꼴이 라틴어, 그리스어 또는 키릴 자모를 지원하는 경우 숫자와 구두점은 이 세 스크립트 중 하나에 속할 수 있으며 이러한 문자에 적용되는 모든 기능은 모든 스크립트에 있어야 합니다. 예를 들어 숫자 9가 숫자 1과 커닝되는 경우 해당 커닝 데이터는 라틴어뿐만 아니라 키릴 자모와 그리스어에도 있어야 합니다.

그러나 한 글꼴의 숫자를 다른 글꼴의 한자 문자로 둘러싸서 사용하는 것이 가능하며(그리고 일본어에서는 일반적이라고 생각합니다). 이것은 숫자가 한자를 지원하지 않는 글꼴에 있을 수 있음을 의미합니다. 그러나 OpenType은 한자 스크립트를 할당합니다. 따라서 조회가 적용되지 않습니다. Adobe는 스크립트의 대부분의 기능이 대체 스크립트 'DFLT'에도 나타나야 한다고 제안합니다. 다른 사람이 이 규칙을 따르는지는 확실하지 않습니다.


라틴어
^^^^^

Uniscribe는 `다음 기능 <http://www.microsoft.com/typography/OpenType%20Dev/standard/shaping.mspx>`__을 지원합니다.

라틴어에는 특별한 복잡성이 많지 않습니다. 라틴어 글꼴은 일반적으로 글꼴 테이블이 없거나 거의 없는 단일 바이트 인코딩에 맞을 수 있습니다. 빌드해야 할 강조된 글리프가 많이 있거나 마크 투 베이스 위치 지정을 사용할 수 있습니다. 일부 글리프 조합에 대해 커닝을 생성해야 합니다. 몇 가지 합자를 생성해야 합니다("f" 합자: ff, fi, fl, ffi, ffl 및 아마도 st -- 그러나 일부 언어(터키어)의 경우 "fi" 합자를 만들어서는 안 됨).

소문자 세트를 추가하고 싶을 수 있습니다. Adobe는 라틴어 소문자에 대해 개인 사용 영역에 블록을 예약했지만 이제는 더 이상 사용되지 않습니다.

일부 언어에는 자체적인 특정 요구 사항이 있습니다.

* `폴란드어의 경우 <http://studweb.euv-frankfurt-o.de/twardoch/f/en/typo/ogonek/kreska.html>`__


그리스어
^^^^^

Uniscribe는 `다음 기능 <http://www.microsoft.com/typography/OpenType%20Dev/standard/shaping.mspx>`__을 지원합니다.

그리스어에도 많은 복잡성이 없습니다. 현대 그리스어 글꼴은 일반적으로 단일 바이트 인코딩에 맞습니다. 현대 그리스어의 경우 빌드해야 할 몇 가지 강조된 글리프가 있으며, 다성 그리스어의 경우 많이 있습니다. 마크 투 베이스 및 마크 투 마크가 옵션입니다. 커닝을 생성해야 합니다. 현대 그리스어에 대한 표준 합자는 알지 못합니다(고대 그리스어에는 일부 글리프에 합자 및 변형이 있었음).

소문자도 다시 옵션이며, 이를 위해 개인 사용 영역에 블록을 예약했지만 이것도 이제는 더 이상 사용되지 않습니다.


키릴 자모
^^^^^^^^

Uniscribe는 `다음 기능 <http://www.microsoft.com/typography/OpenType%20Dev/standard/shaping.mspx>`__을 지원합니다.

키릴 자모 글꼴도 단일 바이트 인코딩에 맞습니다. 몇 가지 강조된 글리프가 있습니다. 커닝을 생성해야 합니다. 표준 합자는 알지 못합니다.

일부 언어에는 변형 글리프가 필요합니다('loca' 기능으로 지정됨).

* `세르비아어/마케도니아어 <http://jankojs.tripod.com/SerbianCyr.htm>`__


아랍어
^^^^^^

Uniscribe는 `다음 기능 <http://www.microsoft.com/typography/OpenType%20Dev/arabic/shaping.mspx>`__을 지원합니다.

아랍어는 완전한 초성, 중성, 종성 및 독립형이 필요하며 유니코드는 이를 위한 공간을 예약했습니다. 아랍어는 또한 방대한 합자 세트가 필요하며 유니코드는 많은 공간을 예약했지만 때로는 추가 합자가 필요할 것이라고 생각합니다. 아랍어는 또한 모음을 문자 위에 배치하기 위한 마크(마크 투 베이스, 마크 투 합자) 부착 세트가 필요합니다. 아랍어에는 글리프 분해 테이블이 필요할 수 있습니다.

좋은 아랍어 타이포그래피에서는 글리프당 4개 이상의 형태가 필요하다고 들었습니다. 이것이 어떻게 지원되어야 하는지는 확실하지 않습니다.

오른쪽에서 왼쪽으로.


히브리어
^^^^^^

Uniscribe는 `다음 기능 <http://www.microsoft.com/typography/OpenType%20Dev/hebrew/shaping.mspx>`__을 지원합니다.

히브리어에는 몇 가지 종성 형태가 있지만 이를 위한 특별한 테이블은 필요하지 않습니다. 히브리어에는 커닝이 필요할 수 있습니다. 히브리어에는 모음을 문자 위에 배치하기 위한 마크(마크 투 베이스) 테이블 세트가 있어야 합니다. 히브리어에는 글리프 분해 테이블이 필요할 수 있습니다. 필요한 합자는 알지 못합니다.

오른쪽에서 왼쪽으로


인도어 스크립트
^^^^^^^^^^^^^

Uniscribe는 `다음 기능 <http://www.microsoft.com/typography/otfntdev/indicot/shaping.aspx>`__을 지원합니다.

인도어 스크립트에는 합자 세트가 필요합니다.

(아마도 훨씬 더 많이 필요하겠지만 무엇인지는 알지 못합니다.)


한국어 한글
^^^^^^^^^^^^^

Uniscribe는 `다음 기능 <http://www.microsoft.com/typography/OpenType%20Dev/hangul/shaping.mspx>`__을 지원합니다.

한글 스크립트는 음성 알파벳으로 구성된 음절 세트로 구성됩니다. 일반적으로 글꼴은 미리 구성된 음절 세트로 구성됩니다.

이 모든 음절의 엄청난 조합 폭발로 인해 복잡성이 발생합니다. 이것은 포스트스크립트에서 CID 키 글꼴로 완화됩니다.

세로 쓰기와 왼쪽에서 오른쪽 쓰기가 사용되며 일부 글리프는 세로로 그릴 때 방향이 다릅니다(예: 괄호).


일본어 및 중국어(및 한국어 한자)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

MicroSoft는 이러한 스크립트를 설명하지 않습니다(제가 찾을 수 있는 한).

다시 말하지만, 엄청난 양의 글리프가 필요하며 포스트스크립트는 이를 처리하기 위해 CID 키 글꼴을 사용합니다.

세로 쓰기와 왼쪽에서 오른쪽 쓰기가 사용되며 일부 글리프는 세로로 그릴 때 방향이 다릅니다(예: 괄호).
