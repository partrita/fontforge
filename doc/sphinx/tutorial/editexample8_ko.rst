비트맵 글꼴 작업
=========================


비트맵 스트라이크 열기 및 가져오기
----------------------------------

FontForge는 주로 외곽선 글꼴 편집기이지만 비트맵(및 회색조 또는 앤티앨리어싱) 글꼴을 편집하는 기능도 일부 있습니다. 여기서 유용한 용어는 "스트라이크"입니다. 스트라이크는 비트맵 글꼴의 특정 크기입니다. FontForge가 글꼴을 표시하면 해당 글꼴에는 최대 하나의 외곽선이 포함되지만 잠재적으로 많은 비트맵(또는 회색조) 스트라이크(여러 다른 픽셀 크기용)가 포함될 수 있습니다.

현대 래스터라이저의 고품질 결과를 감안할 때 외곽선과 함께 비트맵을 제공하는 것이 정말로 필요한지 궁금할 수 있으며, 라틴어(그리스어, 키릴 자모) 글꼴의 경우 필요하지 않을 수 있지만 작은 픽셀 크기의 CJK 글꼴의 경우 사람의 눈은 여전히 최고의 래스터라이저보다 더 나은 선택을 할 수 있습니다. 1980년대에 Apple이 처음 PostScript 글꼴을 채택했을 때 외곽선과 함께 사용할 비트맵이 필수적이라고 느꼈습니다. 그래서 비트맵을 제공하지 않고는 PostScript 글꼴을 사용하는 것조차 불가능했습니다. 오늘날에도 Mac에서 Type1 글꼴을 사용할 때는 이를 가리키는 비트맵 글꼴이 있어야 합니다.

물론 Type1 글꼴은 이제 약간 구식이지만 sfnt 파일 형식(OpenType 및 TrueType 글꼴 모두에 사용되는 형식)은 글꼴의 외곽선 버전과 함께 포함된 비트맵 스트라이크를 지원합니다. 이러한 스트라이크는 존재하는 모든 픽셀 크기에 대해 외곽선을 래스터화하는 것보다 우선적으로 사용됩니다.

외곽선 글꼴과 비트맵 스트라이크가 모두 있는 sfnt가 있는 경우 :ref:`파일->열기 <filemenu.Open>` 명령으로 직접 열 수 있으며 FontForge는 모든 비트와 조각을 로드합니다.

:ref:`파일->열기 <filemenu.Open>` 명령으로 비트맵 전용 글꼴을 직접 열 수도 있지만, 동일한 기본 글꼴의 여러 스트라이크가 별도의 파일에 있는 경우 열기를 사용하여 첫 번째(또는 외곽선 버전만)만 열고 :ref:`파일->가져오기 <filemenu.Import>`를 사용하여 다른 스트라이크를 하나의 FontForge 글꼴로 병합하는 것이 좋습니다.

예를 들어 ``Ambrosia.pfb``(외곽선 글꼴), ``Ambrosia-12.bdf`` 및 ``Ambrosia-24.bdf``(두 개의 비트맵 스트라이크, 하나는 12픽셀 높이, 다른 하나는 24)가 있고 모두 하나의 글꼴에 포함되기를 원한다고 가정해 보겠습니다. 먼저 :ref:`파일->열기 <filemenu.Open>`를 사용하여 Ambrosia.pfb를 열고 그런 다음 :ref:`파일->가져오기 <filemenu.Import>`를 사용하여 두 비트맵 스트라이크를 모두 선택합니다(시프트 키를 누른 상태에서).

반면에 비트맵이 두 개만 있는 경우: ``Ambrosia-12.bdf`` 및 ``Ambrosia-24.bdf``, 그런 다음 :ref:`파일->열기 <filemenu.Open>`를 사용하여 스트라이크 중 하나를 열고 :ref:`파일->가져오기 <filemenu.Import>`를 사용하여 다른 스트라이크를 가져옵니다.

가져오기에 ``[] 배경으로``라는 확인란이 있음을 눈치채셨을 것입니다. 이 확인란을 선택하면 비트맵 글꼴이 글꼴 자체로 로드되지 않고 외곽선 글꼴의 배경으로 로드되어 :ref:`요소->자동 추적 <elementmenu.AutoTrace>`하여 비트맵에서 외곽선 글꼴을 제공할 수 있습니다. 경고: 큰 (100픽셀 이상) 글꼴을 추적하지 않는 한 이것은 상당히 나쁜 결과를 낳습니다.


비트맵 스트라이크 만들기
-----------------------

.. image:: /images/bitmapsavail.png
   :align: right

글꼴에 주어진 픽셀 크기의 비트맵 스트라이크를 추가하려면 :ref:`요소->사용 가능한 비트맵 스트라이크 <elementmenu.Bitmaps>`를 사용합니다. 화면 하단의 목록에 관심 있는 픽셀 크기를 추가하기만 하면 됩니다.

포인트 크기를 다루는 것이 더 편하다면 화면 해상도에 따라 달라진다는 점에 유의하십시오. 이 대화 상자는 두 가지 표준 해상도에 대한 포인트와 픽셀 크기 간의 변환을 보여줍니다. 해상도는 사용하는 창 시스템에 따라 다릅니다.

물론 둘 이상의 픽셀 크기를 추가할 수 있습니다. 더 이상 원하지 않으면 픽셀 크기를 제거할 수도 있습니다.

일반적으로 새 스트라이크를 만들면 외곽선 글꼴에서 래스터화됩니다. 외곽선 글꼴이 없으면 FontForge는 사용 가능한 가장 큰 스트라이크를 새 크기로 조정하려고 시도합니다(대부분의 경우 이것은 상당히 보기 흉하지만 없는 것보다는 나을 수 있음).

대화 상자 하단에는 ``[*] 래스터화된 스트라이크 만들기(빈 스트라이크 아님)``라는 확인란도 있습니다. 이 확인란을 끄면 위에서 설명한 래스터화 프로세스가 발생하지 않으며 새 스트라이크는 글리프가 없는 상태로 생성됩니다(물론 나중에 글리프를 추가할 수 있음).


비트맵 속성
-----------------

X11의 bdf 및 pcf 글꼴 시대에는 각 글꼴에 속성 집합이 첨부되었습니다. X11이 OpenType 비트맵으로 이동함에 따라 이러한 속성이 여전히 유용한지는 명확하지 않습니다. 그럴 수도 있습니다. 어쨌든 FontForge는 BDF 글꼴과 OpenType 비트맵 글꼴 모두에 저장합니다. 각 스트라이크에는 자체 속성 집합이 있을 수 있습니다. FontForge는 스트라이크를 만들 때 자동으로 생성하고(그리고 속성이 있는 글꼴을 읽을 때 유지함) 현재 값을 :ref:`요소-Bdf 정보 <elementmenu.BDF-Info>` 대화 상자로 재정의할 수 있습니다.


새 비트맵 전용 글꼴 만들기
-------------------------------

외곽선이 없고 비트맵 스트라이크만 있는 새 글꼴을 만들려면 :ref:`파일->새로 만들기 <filemenu.New>`를 사용하여 새 글꼴을 만든 다음 :ref:`요소->사용 가능한 비트맵 스트라이크 <elementmenu.Bitmaps>`를 사용하여 (빈) 스트라이크를 추가합니다. 새 글꼴에 스트라이크를 추가하자마자 글꼴은 비트맵 전용 글꼴이 됩니다.

Apple에는 sfnt 파일 형식의 비트맵 전용 버전이 있고 X11에도 있습니다. 물론 두 형식은 약간 다릅니다. Windows에는 비트맵 전용 sfnt 형식에 대한 지원이 없습니다.


글꼴 보기의 비트맵
------------------------

글꼴 보기(및 메트릭 보기)의 :ref:`보기 <viewmenu.bitmaps>` 메뉴에는 글꼴의 모든 비트맵 스트라이크 목록이 포함되어 있습니다. 글꼴 보기에 표시할 스트라이크를 선택할 수 있습니다. 또한 :ref:`보기->비트맵 확대... <viewmenu.BitmapMag>`를 사용하여 스트라이크가 표시되는 배율을 변경할 수 있습니다(고해상도 화면에서 8픽셀 글꼴의 세부 정보를 보기가 어려울 수 있으므로 실제 크기의 3배로 표시하고 싶을 수 있음).

글꼴 보기의 많은 명령은 글꼴의 모든 스트라이크(및 외곽선)에 적용됩니다. 예를 들어 :ref:`편집->복사 <editmenu.Copy>`는 외곽선 글리프와 모든 비트맵 글리프를 복사합니다. 때로는 하나의 스트라이크에만 영향을 미치고 싶을 수 있습니다. 그렇다면 :ref:`편집->복사->모든 글꼴 <editmenu.Fonts>`을 선택 취소하십시오.

:ref:`요소->빌드 <elementmenu.Accented>` 명령은 강조된 외곽선 글리프를 빌드하는 것처럼 강조된 비트맵 글리프를 빌드합니다.

글꼴 보기에 비트맵 스트라이크가 표시되고 문자를 두 번 클릭하면 FontForge는 현재 스트라이크에 해당 문자를 표시하는 :doc:`비트맵 편집 창 </ui/mainviews/bitmapview>`을 표시합니다(외곽선 편집 창을 여는 대신). 문자에 현재 스트라이크에 일치하는 글리프가 없으면 FontForge는 글꼴의 외곽선 버전을 래스터화하여 하나를 만듭니다.


비트맵 편집
---------------

.. image:: /images/BitmapView.png
   :align: left

비트맵 편집 창은 상당히 자명해야 합니다. 창은 간단한 비트맵 편집기입니다. 연필 도구를 사용하여 픽셀을 클릭하면 변경됩니다. 선 도구는 시작점과 끝점 사이에 직선을 그립니다.

비트맵 배경에서 외곽선 글리프를 볼 수 있습니다.

``[비트맵 다시 계산]`` 버튼을 눌러 비트맵을 다시 생성할 수 있습니다(외곽선을 래스터화하여).

앤티앨리어싱된 회색조를 편집하는 것은 연필로 적용할 색상(실제로는 회색조 수준)을 선택해야 한다는 추가적인 복잡성이 있습니다. 이를 위해 가능한 모든 회색조가 있는 추가 팔레트가 있습니다.


희소 비트맵 스트라이크
---------------------

때로는 스트라이크에 완전한 비트맵 글리프 세트가 필요하지 않을 때가 있습니다. 아마도 래스터라이저는 하나의 글리프를 제외하고 모든 글리프에 대해 좋은 작업을 수행합니다. 그런 다음 빈 스트라이크를 만들고(:ref:`요소->사용 가능한 비트맵 스트라이크 <elementmenu.Bitmaps>` ``[*] 래스터화된 스트라이크 만들기`` 확인란 선택 취소) 관심 있는 하나의 글리프를 선택하고 :ref:`요소->비트맵 글리프 다시 생성 <elementmenu.Regenerate>`이라고 말할 수 있습니다.

또는 완전히 래스터화된 스트라이크를 만든 다음 필요 없는 글리프를 선택하고 :ref:`요소->비트맵 글리프 제거 <elementmenu.RemoveBitmaps>`라고 말할 수 있습니다.
