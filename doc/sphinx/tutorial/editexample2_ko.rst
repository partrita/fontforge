글리프에 대한 추가 정보
==============


글리프로 이동.
---------------------

폰트 보기는 폰트의 글리프 주위를 탐색하는 한 가지 방법을 제공합니다. 필요한 글리프를 찾을 때까지 스크롤한 다음 두 번 클릭하여 해당 글리프를 보는 창을 엽니다.

글리프를 입력하면 해당 글리프로 이동합니다.

그러나 일부 폰트는 거대하며(중국어, 일본어 및 한국어 폰트에는 수천 또는 수만 개의 글리프가 있음) 폰트 보기를 스크롤하는 것은 글리프를 찾는 비효율적인 방법입니다. :menuselection:`보기 --> 이동`은 이름(또는 인코딩)을 아는 모든 글리프로 직접 이동할 수 있는 간단한 대화 상자를 제공합니다. 폰트가 유니코드 폰트인 경우 이 대화 상자를 사용하면 블록 이름(예: 히브리어가 아닌 알레프)으로 글리프를 찾을 수도 있습니다.

탐색하는 가장 간단한 방법은 다음 또는 이전 글리프로 이동하는 것입니다. 그리고 :menuselection:`보기 --> 다음 문자` 및 :menuselection:`보기 --> 이전 문자`가 정확히 그렇게 합니다.


문자 "o" 만들기 -- 일관된 방향
------------------------------------------------

이전 예에서 문자의 비트맵은 이미지의 캔버스를 채웠습니다. 그리고 FontForge가 이미지를 가져왔을 때 프로그램에서 한 번 크기를 조정해야 했습니다. 하지만 보통 문자 이미지를 만들 때 주위에 얼마나 많은 공백이 있어야 하는지에 대한 아이디어가 있습니다. 이미지가 정확히 1em 높이면 FontForge는 자동으로 올바른 크기로 조정합니다. 따라서 다음 예에서 모든 이미지는 em에 완벽하게 맞도록 주위에 정확한 양의 공백이 있습니다.

다음 예에서는 폰트 보기에서 "o"를 포함해야 하는 사각형을 두 번 클릭하고 "o_Ambrosia.png"를 가져옵니다.

.. rubric:: "o" 편집 단계

.. flex-grid::

   * - .. image:: /images/o1.png
     - .. image:: /images/o2.png
     - .. image:: /images/o3.png
     - .. image:: /images/o4.png

첫 번째 외곽선은 시계 방향으로 그려지고 두 번째 외곽선은 시계 반대 방향으로 그려집니다. 이 그리기 방향의 변경은 중요합니다. PostScript와 TrueType 모두 글리프의 외부 경계가 특정 방향으로 그려져야 합니다(서로 반대 방향이라는 점은 약간의 불편함입니다). FontForge 내에서 모든 외부 경계는 시계 방향으로 그려져야 하고 모든 내부 경계는 시계 반대 방향으로 그려져야 합니다.

외부 경계와 내부 경계 사이의 방향을 번갈아 가며 그리지 않으면 왼쪽 |o-baddir|과 같은 결과가 나타날 수 있습니다. 외부 윤곽선을 시계 방향으로 그리지 않으면 오류가 더 미묘하지만 일반적으로 글리프가 래스터화되면 덜 만족스러운 결과가 나타납니다.

.. |o-baddir| image:: /images/o-baddir.png

.. note::
  **기술적이고 혼란스러움**

  래스터라이저의 정확한 동작은 다양합니다. 초기 PostScript 래스터라이저는 "0이 아닌 와인딩 수 규칙"을 사용했지만 최신 래스터라이저는 "짝수-홀수" 규칙을 사용합니다. TrueType는 "0이 아닌" 규칙을 사용합니다. 위에서 설명한 내용은 "0이 아닌" 규칙에 대한 것입니다. "짝수-홀수" 규칙은 경로가 어떤 방식으로 그려지든 "o"를 올바르게 채웁니다(힌트에 미묘한 문제가 있을 수 있음).

.. _editexample2.even-odd-non-zero:

짝수-홀수 규칙을 사용하여 채우는 것은 현재 픽셀에서 무한대까지(어떤 방향으로든) 선을 그리고 윤곽선 교차 횟수를 계산하는 것입니다. 이 숫자가 짝수이면 픽셀이 채워지지 않습니다. 숫자가 홀수이면 픽셀이 채워집니다. 0이 아닌 와인딩 수 규칙에서는 동일한 선이 그려지고 시계 방향의 윤곽선 교차는 교차 횟수에 1을 더하고 시계 반대 방향 윤곽선은 1을 뺍니다. 결과가 0이면 픽셀이 채워지지 않고 다른 결과는 채워집니다.

:ref:`요소->방향 수정 <elementmenu.Correct>` 명령은 선택한 각 윤곽선을 보고 외부 또는 내부 윤곽선으로 자격이 있는지 확인하고 윤곽선이 잘못 그려지면 그리기 방향을 반대로 합니다.
